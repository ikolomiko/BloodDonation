@inject IHttpContextAccessor HttpContextAccessor
@using BloodDonation.Types.Entity
@{
    ViewData["Title"] = "Yeni Kan İhtiyacı Ekle";

    int userTypeId = HttpContextAccessor?.HttpContext?.Session.GetInt32("BloodDonation_User_UserTypeId") ?? -1;
    string hospitalRowStyle = userTypeId == (int)UserType.Hospital ? "display: none" : "display: flex";
}


@model BloodDonation.Web.Models.NeedForBlood.AddViewModel


<div class="row">
    <div class="col-md-12">
        <div class="">
            <h4 class="card-header text-center bg-white mb-3">
                Yeni Kan İhtiyacı Ekle
            </h4>
            <div class="card-body">

                @using (Html.BeginForm("Add", "NeedForBlood", FormMethod.Post, new { @class = "form-horizontal input-sm" }))
                {
                    <div class="form-group row my-2" style="@hospitalRowStyle">
                        <label class="col-md-2 col-form-label">Hastane</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.HospitalId, Model.HospitalSelectList, "Seç", new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.HospitalId, null, new { @class = "help-block text-danger" })
                        </div>
                    </div>

                    <div class="form-group row my-2">
                        <label class="col-md-2 col-form-label">Kan Grubu</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.BloodGroupId, Model.BloodGroupSelectList, "Seç", new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.BloodGroupId, null, new { @class = "help-block text-danger" })
                        </div>
                    </div>

                    <div class="form-group row my-2">
                        <label class="col-md-2 col-form-label">İhtiyaç Duyulan Miktar (Ünite)</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control input-sm", type = "number", min = "0", step = "1"})
                            @Html.ValidationMessageFor(m => m.Amount, null, new { @class = "help-block text-danger" })
                        </div>
                    </div>

                    <div class="form-group row my-3">
                        <div class="col-md-12 text-center center-text">
                            <button class="btn btn-success" type="submit" id="btnSubmit">
                                <i class="fa fa-dot-circle-o"></i> Ekle
                            </button>
                            &nbsp;
                            <a class="btn btn-danger" href="~/NeedForBlood/List">
                                <i class="fa fa-ban"></i> İptal
                            </a>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">

                            @if (ViewBag.ErrorMessage != null && !string.IsNullOrEmpty(ViewBag.ErrorMessage))
                            {
                                <div class="text-danger">
                                    @ViewBag.ErrorMessage
                                </div>
                            }
                            @if (ViewBag.ErrorMessageList != null)
                            {
                                <div class="text-danger">
                                    @foreach (var item in ViewBag.ErrorMessageList)
                                    {
                                        <span>@item</span>
                                        <br />
                                    }
                                </div>
                            }

                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>